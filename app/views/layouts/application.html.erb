<!DOCTYPE html>
<html>
  <head>
    <title>Stories</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;500;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Qwitcher+Grypen&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Just+Another+Hand&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Finger+Paint&display=swap" rel="stylesheet">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
    <script src="https://unpkg.com/scrollreveal"></script>
    <script>
      ScrollReveal({ reset: true });
    </script>

  </head>

  <body>
    <%= yield %>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js" integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa" crossorigin="anonymous"></script>

    <script>
      ScrollReveal().reveal('#plane', { delay: 1000});
      ScrollReveal().reveal('.secao3', {duration: 5000});
      ScrollReveal().reveal('main', {duration: 4000});
      ScrollReveal().reveal('.letreiro_2', {duration: 5000});
      ScrollReveal().reveal('.secao_final', {duration: 5000});

    function scrollTrigger(selector, options = {}) {
      let els = document.querySelectorAll(selector)
      els = Array.from(els)
      els.forEach(el => {
        addObserver(el, options)
      })
    }
    function addObserver(el, options) {
      // Check if `IntersectionObserver` is supported
      if(!('IntersectionObserver' in window)) {
        // Simple fallback
        // The animation/callback will be called immediately so
        // the scroll animation doesn't happen on unsupported browsers
        if(options.cb){
          options.cb(el)
        } else{
          entry.target.classList.add('voar')
        }
        // We don't need to execute the rest of the code
        return
      }
      let observer = new IntersectionObserver((entries, observer) => {
        entries.forEach(entry => {
          if(entry.isIntersecting) {
            if(options.cb) {
              options.cb(el)
            } else{
              entry.target.classList.add('voar')
            }
            observer.unobserve(entry.target)
          }
        })
      }, options)
      observer.observe(el)
    }
    // Example usages:
    scrollTrigger('#plane', {
      rootMargin: '-50px',
    })
    </script>
  </body>
</html>
